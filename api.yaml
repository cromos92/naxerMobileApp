swagger: '2.0'
info:
  description: Utilizacion Api Rest
  version: V1
  title: Api Comprathor
  termsOfService: Terms of Service
  contact:
    name: Javier Araya
    url: api URL
    email: www.naxer.es
  license:
    name: jav.teb@gmail.com
    url: licence Api
host: localhost:8080
basePath: /
tags:
  - name: categoria-controller
    description: Categoria Controller
  - name: producto-controller
    description: Producto Controller
  - name: puntuacion-controller
    description: Puntuacion Controller
  - name: user-controller
    description: User Controller
paths:
  /categorys:
    get:
      tags:
        - categoria-controller
      summary: ObtenerTodasLasCategorias
      operationId: ObtenerTodasLasCategoriasUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Categoria'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - categoria-controller
      summary: CrearCategoria
      operationId: CrearCategoriaUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: categoriaDto
          description: categoriaDto
          required: true
          schema:
            $ref: '#/definitions/CategoriaDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Categoria'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /categorys/{id}:
    get:
      tags:
        - categoria-controller
      summary: ObtenerCategoriaPorID
      operationId: ObtenerCategoriaPorIDUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Categoria'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - categoria-controller
      summary: EliminarCategoriaPorID
      operationId: EliminarCategoriaPorIDUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /login:
    post:
      tags:
        - user-controller
      summary: CrearUsuario
      operationId: CrearUsuarioUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /login/searchUser:
    post:
      tags:
        - user-controller
      summary: BuscarCredencialesUsuario
      operationId: BuscarCredencialesUsuarioUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /products:
    get:
      tags:
        - producto-controller
      summary: ObtenerTodosLosProductos
      operationId: ObtenerTodosLosProductosUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Producto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - producto-controller
      summary: CrearProducto
      operationId: CrearProductoUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: productoInDto
          description: productoInDto
          required: true
          schema:
            $ref: '#/definitions/ProductoDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Producto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /products/categorys:
    get:
      tags:
        - producto-controller
      summary: getAllProductoWithCategory
      operationId: getAllProductoWithCategoryUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Producto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /products/delete/{id}:
    delete:
      tags:
        - producto-controller
      summary: EliminarProductoPorID
      operationId: EliminarProductoPorIDUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /products/{id}:
    get:
      tags:
        - producto-controller
      summary: ObtenerProductoPorID
      operationId: ObtenerProductoPorIDUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Producto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /puntuacion:
    get:
      tags:
        - puntuacion-controller
      summary: ObtenerTodasLasPuntuaciones
      operationId: ObtenerTodasLasPuntuacionesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Puntuacion'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - puntuacion-controller
      summary: CrearPuntuacion
      operationId: CrearPuntuacionUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: puntuacion
          description: puntuacion
          required: true
          schema:
            $ref: '#/definitions/Puntuacion'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Puntuacion'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /puntuacion/deletePorID/{id}:
    delete:
      tags:
        - puntuacion-controller
      summary: EliminarPuntuacionesPorID
      operationId: EliminarPuntuacionesPorIDUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /puntuacion/deletePuntuacionPorIdProd/{id}:
    delete:
      tags:
        - puntuacion-controller
      summary: EliminarPuntuacionesProductosPorIdProductos
      operationId: EliminarPuntuacionesProductosPorIdProductosUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /puntuacion/promedio/{id}:
    get:
      tags:
        - puntuacion-controller
      summary: ObtenerPuntuacionPromediosPorID
      operationId: ObtenerPuntuacionPromediosPorIDUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /puntuacion/puntuacion/{id}:
    get:
      tags:
        - puntuacion-controller
      summary: obtenerPuntuacionPorID
      operationId: obtenerPuntuacionPorIDUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Puntuacion'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /puntuacion/puntuaciones/{id}:
    get:
      tags:
        - puntuacion-controller
      summary: ObtenerPuntuacionesPorIdProducto
      operationId: ObtenerPuntuacionesPorIdProductoUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Puntuacion'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Categoria:
    type: object
    properties:
      fechaLastUpdate:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      nombre:
        type: string
    title: Categoria
  CategoriaDto:
    type: object
    properties:
      fechaLastUpdate:
        type: string
        format: date-time
      nombre:
        type: string
    title: CategoriaDto
  Producto:
    type: object
    properties:
      descripcion:
        type: string
      fechaCreacion:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      idCategoria:
        type: integer
        format: int32
      nombre:
        type: string
      precio:
        type: number
        format: double
      urlImage:
        type: string
    title: Producto
  ProductoDto:
    type: object
    properties:
      descripcion:
        type: string
      fechaCreacion:
        type: string
        format: date-time
      idCategoria:
        type: integer
        format: int32
      nombre:
        type: string
      precio:
        type: number
        format: double
      urlImage:
        type: string
    title: ProductoDto
  Puntuacion:
    type: object
    properties:
      comentario:
        type: string
      id:
        type: integer
        format: int64
      id_producto:
        type: integer
        format: int64
      nivelCalidad:
        type: number
        format: double
      nivelDiseno:
        type: number
        format: double
      nivelPrecio:
        type: number
        format: double
    title: Puntuacion
  User:
    type: object
    properties:
      email:
        type: string
      id:
        type: integer
        format: int64
      nombre:
        type: string
      password:
        type: string
    title: User

